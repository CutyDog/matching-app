"""
Autogenerated input type of AcceptLike
"""
input AcceptLikeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  likeId: ID!
}

"""
Autogenerated return type of AcceptLike.
"""
type AcceptLikePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  like: Like
}

"""
Autogenerated input type of CreateProfile
"""
input CreateProfileInput {
  birthday: ISO8601Date!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  gender: ProfileGenderEnum!
  introduction: String
}

"""
Autogenerated return type of CreateProfile.
"""
type CreateProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile
}

"""
Autogenerated input type of DeactivateAccount
"""
input DeactivateAccountInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  confirm: Boolean!
}

"""
Autogenerated return type of DeactivateAccount.
"""
type DeactivateAccountPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Like {
  acceptedAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  id: ID!
  partner: User
  receiver: User!
  receiverId: Int!
  sender: User!
  senderId: Int!
  status: LikeStatusEnum!
  updatedAt: ISO8601DateTime!
}

enum LikeStatusEnum {
  ACCEPTED
  PENDING
  REJECTED
}

type Mutation {
  acceptLike(
    """
    Parameters for AcceptLike
    """
    input: AcceptLikeInput!
  ): AcceptLikePayload
  createProfile(
    """
    Parameters for CreateProfile
    """
    input: CreateProfileInput!
  ): CreateProfilePayload
  deactivateAccount(
    """
    Parameters for DeactivateAccount
    """
    input: DeactivateAccountInput!
  ): DeactivateAccountPayload
  rejectLike(
    """
    Parameters for RejectLike
    """
    input: RejectLikeInput!
  ): RejectLikePayload
  sendLike(
    """
    Parameters for SendLike
    """
    input: SendLikeInput!
  ): SendLikePayload
  signIn(
    """
    Parameters for SignIn
    """
    input: SignInInput!
  ): SignInPayload
  signUp(
    """
    Parameters for SignUp
    """
    input: SignUpInput!
  ): SignUpPayload
  updateProfile(
    """
    Parameters for UpdateProfile
    """
    input: UpdateProfileInput!
  ): UpdateProfilePayload
}

type Profile {
  avatarUrl: String!
  birthday: ISO8601Date!
  createdAt: ISO8601DateTime!
  gender: ProfileGenderEnum!
  id: ID!
  introduction: String!
  updatedAt: ISO8601DateTime!
  user: User!
}

enum ProfileGenderEnum {
  FEMALE
  MALE
  OTHER
}

type Query {
  currentAccount: User
  sample(name: String!): String!
}

"""
Autogenerated input type of RejectLike
"""
input RejectLikeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  likeId: ID!
}

"""
Autogenerated return type of RejectLike.
"""
type RejectLikePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  like: Like
}

"""
Autogenerated input type of SendLike
"""
input SendLikeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  receiverId: ID!
}

"""
Autogenerated return type of SendLike.
"""
type SendLikePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  like: Like
}

"""
Autogenerated input type of SignIn
"""
input SignInInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of SignIn.
"""
type SignInPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
}

"""
Autogenerated input type of SignUp
"""
input SignUpInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  name: String!
  password: String!
}

"""
Autogenerated return type of SignUp.
"""
type SignUpPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

type Subscription {
  sample(name: String!): String!
}

"""
Autogenerated input type of UpdateProfile
"""
input UpdateProfileInput {
  birthday: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  gender: ProfileGenderEnum
  introduction: String
}

"""
Autogenerated return type of UpdateProfile.
"""
type UpdateProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile
}

type User {
  activeLikes: [Like!]
  admin: Boolean!
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  lastLoginAt: ISO8601DateTime
  matches: [Like!]
  name: String!
  passiveLikes: [Like!]
  passwordDigest: String
  profile: Profile
  status: UserStatusEnum!
  updatedAt: ISO8601DateTime!
}

enum UserStatusEnum {
  ACTIVE
  INACTIVE
}
