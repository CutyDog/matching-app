"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Like {
  acceptedAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  id: ID!
  partner: User
  receiver: User!
  receiverId: Int!
  sender: User!
  senderId: Int!
  status: LikeStatusEnum!
  updatedAt: ISO8601DateTime!
}

enum LikeStatusEnum {
  ACCEPTED
  PENDING
  REJECTED
}

type Mutation {
  signIn(
    """
    Parameters for SignIn
    """
    input: SignInInput!
  ): SignInPayload
  signUp(
    """
    Parameters for SignUp
    """
    input: SignUpInput!
  ): SignUpPayload
}

type Profile {
  birthday: ISO8601Date!
  createdAt: ISO8601DateTime!
  gender: ProfileGenderEnum!
  id: ID!
  updatedAt: ISO8601DateTime!
  user: User!
}

enum ProfileGenderEnum {
  FEMALE
  MALE
  OTHER
}

type Query {
  currentAccount: User
  sample(name: String!): String!
}

"""
Autogenerated input type of SignIn
"""
input SignInInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of SignIn.
"""
type SignInPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
}

"""
Autogenerated input type of SignUp
"""
input SignUpInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  name: String!
  password: String!
}

"""
Autogenerated return type of SignUp.
"""
type SignUpPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

type Subscription {
  sample(name: String!): String!
}

type User {
  activeLikes: [Like!]
  admin: Boolean!
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  lastLoginAt: ISO8601DateTime
  matches: [Like!]
  name: String!
  passiveLikes: [Like!]
  passwordDigest: String
  profile: Profile
  status: UserStatusEnum!
  updatedAt: ISO8601DateTime!
}

enum UserStatusEnum {
  ACTIVE
  INACTIVE
}
