/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded date */
  ISO8601Date: { input: any; output: any; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
};

/** Autogenerated input type of AcceptLike */
export type AcceptLikeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  likeId: Scalars['ID']['input'];
};

/** Autogenerated return type of AcceptLike. */
export type AcceptLikePayload = {
  __typename?: 'AcceptLikePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  like?: Maybe<Like>;
};

/** Autogenerated input type of CreateProfile */
export type CreateProfileInput = {
  birthday: Scalars['ISO8601Date']['input'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  gender: ProfileGenderEnum;
  introduction?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateProfile. */
export type CreateProfilePayload = {
  __typename?: 'CreateProfilePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  profile?: Maybe<Profile>;
};

/** Autogenerated input type of DeactivateAccount */
export type DeactivateAccountInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  confirm: Scalars['Boolean']['input'];
};

/** Autogenerated return type of DeactivateAccount. */
export type DeactivateAccountPayload = {
  __typename?: 'DeactivateAccountPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

export type Like = {
  __typename?: 'Like';
  acceptedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  createdAt: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  partner?: Maybe<User>;
  receiver: User;
  receiverId: Scalars['Int']['output'];
  sender: User;
  senderId: Scalars['Int']['output'];
  status: LikeStatusEnum;
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

export enum LikeStatusEnum {
  Accepted = 'ACCEPTED',
  Pending = 'PENDING',
  Rejected = 'REJECTED'
}

export type Mutation = {
  __typename?: 'Mutation';
  acceptLike?: Maybe<AcceptLikePayload>;
  createProfile?: Maybe<CreateProfilePayload>;
  deactivateAccount?: Maybe<DeactivateAccountPayload>;
  rejectLike?: Maybe<RejectLikePayload>;
  sendLike?: Maybe<SendLikePayload>;
  signIn?: Maybe<SignInPayload>;
  signUp?: Maybe<SignUpPayload>;
  updateProfile?: Maybe<UpdateProfilePayload>;
};


export type MutationAcceptLikeArgs = {
  input: AcceptLikeInput;
};


export type MutationCreateProfileArgs = {
  input: CreateProfileInput;
};


export type MutationDeactivateAccountArgs = {
  input: DeactivateAccountInput;
};


export type MutationRejectLikeArgs = {
  input: RejectLikeInput;
};


export type MutationSendLikeArgs = {
  input: SendLikeInput;
};


export type MutationSignInArgs = {
  input: SignInInput;
};


export type MutationSignUpArgs = {
  input: SignUpInput;
};


export type MutationUpdateProfileArgs = {
  input: UpdateProfileInput;
};

export type Profile = {
  __typename?: 'Profile';
  avatarUrl?: Maybe<Scalars['String']['output']>;
  birthday: Scalars['ISO8601Date']['output'];
  createdAt: Scalars['ISO8601DateTime']['output'];
  gender: ProfileGenderEnum;
  id: Scalars['ID']['output'];
  introduction: Scalars['String']['output'];
  updatedAt: Scalars['ISO8601DateTime']['output'];
  user: User;
};

export enum ProfileGenderEnum {
  Female = 'FEMALE',
  Male = 'MALE',
  Other = 'OTHER'
}

export type Query = {
  __typename?: 'Query';
  currentAccount?: Maybe<User>;
  sample: Scalars['String']['output'];
};


export type QuerySampleArgs = {
  name: Scalars['String']['input'];
};

/** Autogenerated input type of RejectLike */
export type RejectLikeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  likeId: Scalars['ID']['input'];
};

/** Autogenerated return type of RejectLike. */
export type RejectLikePayload = {
  __typename?: 'RejectLikePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  like?: Maybe<Like>;
};

/** Autogenerated input type of SendLike */
export type SendLikeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  receiverId: Scalars['ID']['input'];
};

/** Autogenerated return type of SendLike. */
export type SendLikePayload = {
  __typename?: 'SendLikePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  like?: Maybe<Like>;
};

/** Autogenerated input type of SignIn */
export type SignInInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Autogenerated return type of SignIn. */
export type SignInPayload = {
  __typename?: 'SignInPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  token?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of SignUp */
export type SignUpInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Autogenerated return type of SignUp. */
export type SignUpPayload = {
  __typename?: 'SignUpPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  token?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

export type Subscription = {
  __typename?: 'Subscription';
  sample: Scalars['String']['output'];
};


export type SubscriptionSampleArgs = {
  name: Scalars['String']['input'];
};

/** Autogenerated input type of UpdateProfile */
export type UpdateProfileInput = {
  avatarUrl?: InputMaybe<Scalars['String']['input']>;
  birthday?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<ProfileGenderEnum>;
  introduction?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of UpdateProfile. */
export type UpdateProfilePayload = {
  __typename?: 'UpdateProfilePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  profile?: Maybe<Profile>;
};

export type User = {
  __typename?: 'User';
  activeLikes?: Maybe<Array<Like>>;
  admin: Scalars['Boolean']['output'];
  createdAt: Scalars['ISO8601DateTime']['output'];
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  lastLoginAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  matches?: Maybe<Array<Like>>;
  name: Scalars['String']['output'];
  passiveLikes?: Maybe<Array<Like>>;
  passwordDigest?: Maybe<Scalars['String']['output']>;
  profile?: Maybe<Profile>;
  status: UserStatusEnum;
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

export enum UserStatusEnum {
  Active = 'ACTIVE',
  Inactive = 'INACTIVE'
}

export type UpdateProfileMutationVariables = Exact<{
  introduction?: InputMaybe<Scalars['String']['input']>;
  avatarUrl?: InputMaybe<Scalars['String']['input']>;
}>;


export type UpdateProfileMutation = { __typename?: 'Mutation', updateProfile?: { __typename?: 'UpdateProfilePayload', profile?: { __typename?: 'Profile', id: string } | null } | null };

export type CurrentAccountQueryVariables = Exact<{ [key: string]: never; }>;


export type CurrentAccountQuery = { __typename?: 'Query', currentAccount?: { __typename?: 'User', activeLikes?: Array<{ __typename?: 'Like', id: string, createdAt: any, receiver: { __typename?: 'User', id: string, name: string } }> | null, passiveLikes?: Array<{ __typename?: 'Like', id: string, createdAt: any, sender: { __typename?: 'User', id: string, name: string } }> | null } | null };

export type SignInMutationVariables = Exact<{
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
}>;


export type SignInMutation = { __typename?: 'Mutation', signIn?: { __typename?: 'SignInPayload', token?: string | null } | null };


export const UpdateProfileDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateProfile"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"introduction"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"avatarUrl"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateProfile"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"introduction"},"value":{"kind":"Variable","name":{"kind":"Name","value":"introduction"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"avatarUrl"},"value":{"kind":"Variable","name":{"kind":"Name","value":"avatarUrl"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"profile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<UpdateProfileMutation, UpdateProfileMutationVariables>;
export const CurrentAccountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"currentAccount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentAccount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"activeLikes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"receiver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"passiveLikes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"sender"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<CurrentAccountQuery, CurrentAccountQueryVariables>;
export const SignInDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"signIn"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"password"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"signIn"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"password"},"value":{"kind":"Variable","name":{"kind":"Name","value":"password"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"token"}}]}}]}}]} as unknown as DocumentNode<SignInMutation, SignInMutationVariables>;